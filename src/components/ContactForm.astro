---
// src/components/ContactForm.astro v18.2 (Simple JavaScript Fix)
// ContactForm - EINFACHE Version die garantiert funktioniert

interface Props {
  leadForm?: boolean;
  showMessage?: boolean;
  variant?: 'default' | 'compact' | 'inline';
  className?: string;
}

const { 
  leadForm = false,
  showMessage = true,
  variant = 'default',
  className = ""
} = Astro.props;

// Generate unique form ID
const formId = `contact-form-${Math.random().toString(36).substr(2, 9)}`;

// Convert boolean to string for Alpine.js
const isLeadFormValue = leadForm ? 'true' : 'false';

console.log(`üìù ContactForm v18.2 rendered - ${variant} variant, leadForm: ${leadForm} - SIMPLE FIX`);
---

<div class={`contact-form-wrapper ${className}`}>
  <form
    id={formId}
    x-data="{
        showSuccess: false,
        showError: false,
        errorMessage: '',
        isSubmitting: false,
        leadForm: isLeadFormValue,
        
        formData: {
            name: '',
            email: '',
            phone: '',
            message: '',
            gdprConsent: false,
            honeypot: ''
        },
        
        validation: {
            name: true,
            email: true,
            phone: true,
            gdprConsent: true
        },

        async submitForm() {
            console.log('=== FORM SUBMISSION v18.2 ===');
            
            if (this.isSubmitting) return;
            
            this.resetMessages();
            this.isSubmitting = true;

            // Simple validation
            if (!this.validateForm()) {
                this.showError = true;
                this.errorMessage = 'Bitte f√ºllen Sie alle Pflichtfelder aus und stimmen Sie der Datenschutzerkl√§rung zu.';
                this.isSubmitting = false;
                return;
            }

            // Honeypot check
            if (this.formData.honeypot.trim() !== '') {
                console.log('Spam blocked');
                this.handleSpam();
                return;
            }

            try {
                const response = await fetch('/contact', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        name: this.formData.name.trim(),
                        email: this.formData.email.trim().toLowerCase(),
                        phone: this.formData.phone.trim(),
                        message: this.formData.message.trim(),
                        gdprConsent: this.formData.gdprConsent,
                        leadForm: this.leadForm,
                        timestamp: new Date().toISOString()
                    })
                });

                const result = await response.json();
                
                if (response.ok && result.success) {
                    this.showSuccess = true;
                    this.showError = false;
                    this.resetForm();
                } else {
                    this.showError = true;
                    this.errorMessage = result.message || 'Ein Fehler ist aufgetreten.';
                }
                
            } catch (error) {
                console.error('Network error:', error);
                this.showError = true;
                this.errorMessage = 'Verbindungsfehler. Bitte versuchen Sie es sp√§ter erneut.';
            } finally {
                this.isSubmitting = false;
            }
        },

        validateForm() {
            let isValid = true;
            this.resetValidation();
            
            // Name
            if (!this.formData.name.trim() || this.formData.name.trim().length < 2) {
                this.validation.name = false;
                isValid = false;
            }
            
            // Email - simple validation
            const email = this.formData.email.trim();
            if (!email || !email.includes('@') || !email.includes('.')) {
                this.validation.email = false;
                isValid = false;
            }
            
            // Phone
            if (!this.formData.phone.trim() || this.formData.phone.trim().length < 6) {
                this.validation.phone = false;
                isValid = false;
            }
            
            // GDPR
            if (!this.formData.gdprConsent) {
                this.validation.gdprConsent = false;
                isValid = false;
            }
            
            return isValid;
        },

        handleSpam() {
            setTimeout(() => {
                this.showSuccess = true;
                this.resetForm();
                this.isSubmitting = false;
            }, 1000);
        },

        resetMessages() {
            this.showSuccess = false;
            this.showError = false;
            this.errorMessage = '';
        },

        resetValidation() {
            this.validation.name = true;
            this.validation.email = true;
            this.validation.phone = true;
            this.validation.gdprConsent = true;
        },

        resetForm() {
            this.formData.name = '';
            this.formData.email = '';
            this.formData.phone = '';
            this.formData.message = '';
            this.formData.gdprConsent = false;
            this.formData.honeypot = '';
            this.resetValidation();
        }
    }"
    x-on:submit.prevent="submitForm"
    class="space-y-4 md:space-y-6"
    novalidate
  >
    <!-- Name Field -->
    <div>
      <label for={`${formId}-name`} class="block text-sm font-medium text-text-dark dark:text-text-light mb-2">
        Name *
      </label>
      <input
        type="text"
        id={`${formId}-name`}
        name="name"
        x-model="formData.name"
        :class="!validation.name ? 'border-red-500' : 'border-light-darkest dark:border-dark-lightest'"
        class="w-full px-4 py-3 rounded-md shadow-sm bg-light-darker dark:bg-dark-lighter text-text-dark dark:text-text-light placeholder-text-muted focus:outline-none focus:ring-2 focus:border-primary-gold focus:ring-primary-gold transition-colors duration-300"
        required
        placeholder="Ihr vollst√§ndiger Name"
        maxlength="50"
      />
      <template x-if="!validation.name">
        <p class="mt-2 text-sm text-red-600 dark:text-red-400">
          Bitte geben Sie Ihren Namen ein (mindestens 2 Zeichen).
        </p>
      </template>
    </div>

    <!-- Email Field -->
    <div>
      <label for={`${formId}-email`} class="block text-sm font-medium text-text-dark dark:text-text-light mb-2">
        E-Mail *
      </label>
      <input
        type="email"
        id={`${formId}-email`}
        name="email"
        x-model="formData.email"
        :class="!validation.email ? 'border-red-500' : 'border-light-darkest dark:border-dark-lightest'"
        class="w-full px-4 py-3 rounded-md shadow-sm bg-light-darker dark:bg-dark-lighter text-text-dark dark:text-text-light placeholder-text-muted focus:outline-none focus:ring-2 focus:border-primary-gold focus:ring-primary-gold transition-colors duration-300"
        required
        placeholder="ihre.email@beispiel.de"
        maxlength="100"
      />
      <template x-if="!validation.email">
        <p class="mt-2 text-sm text-red-600 dark:text-red-400">
          Bitte geben Sie eine g√ºltige E-Mail-Adresse ein.
        </p>
      </template>
    </div>

    <!-- Phone Field -->
    <div>
      <label for={`${formId}-phone`} class="block text-sm font-medium text-text-dark dark:text-text-light mb-2">
        Telefon *
      </label>
      <input
        type="tel"
        id={`${formId}-phone`}
        name="phone"
        x-model="formData.phone"
        :class="!validation.phone ? 'border-red-500' : 'border-light-darkest dark:border-dark-lightest'"
        class="w-full px-4 py-3 rounded-md shadow-sm bg-light-darker dark:bg-dark-lighter text-text-dark dark:text-text-light placeholder-text-muted focus:outline-none focus:ring-2 focus:border-primary-gold focus:ring-primary-gold transition-colors duration-300"
        required
        placeholder="+49 123 456789"
        maxlength="20"
      />
      <template x-if="!validation.phone">
        <p class="mt-2 text-sm text-red-600 dark:text-red-400">
          Bitte geben Sie eine g√ºltige Telefonnummer ein.
        </p>
      </template>
    </div>

    <!-- Message Field -->
    {showMessage && (
      <div>
        <label for={`${formId}-message`} class="block text-sm font-medium text-text-dark dark:text-text-light mb-2">
          Ihre Nachricht
        </label>
        <textarea
          id={`${formId}-message`}
          name="message"
          x-model="formData.message"
          rows="4"
          class="w-full px-4 py-3 rounded-md shadow-sm border border-light-darkest dark:border-dark-lightest bg-light-darker dark:bg-dark-lighter text-text-dark dark:text-text-light placeholder-text-muted focus:outline-none focus:ring-2 focus:border-primary-gold focus:ring-primary-gold transition-colors duration-300"
          placeholder="Beschreiben Sie kurz Ihr Anliegen..."
          maxlength="1000"
        />
      </div>
    )}

    <!-- Honeypot -->
    <div style="position: absolute; left: -9999px; opacity: 0;" aria-hidden="true">
      <input
        type="text"
        name="honeypot"
        x-model="formData.honeypot"
        tabindex="-1"
      />
    </div>

    <!-- GDPR Consent -->
    <div class="flex items-start space-x-3">
      <input
        type="checkbox"
        id={`${formId}-gdpr`}
        name="gdprConsent"
        x-model="formData.gdprConsent"
        :class="!validation.gdprConsent ? 'border-red-500' : 'focus:ring-primary-gold'"
        class="mt-1 h-4 w-4 text-primary-gold border-light-darkest dark:border-dark-lightest rounded focus:ring-2 bg-light-darker dark:bg-dark-lighter"
        required
      />
      <label for={`${formId}-gdpr`} class="text-sm text-text-dark dark:text-text-light">
        Ich stimme der 
        <a href="/datenschutz" class="text-primary-gold hover:underline" target="_blank">
          Datenschutzerkl√§rung
        </a> 
        zu. *
      </label>
    </div>
    <template x-if="!validation.gdprConsent">
      <p class="text-sm text-red-600 dark:text-red-400">
        Bitte stimmen Sie der Datenschutzerkl√§rung zu.
      </p>
    </template>

    <!-- Submit Button -->
    <div class="pt-2">
      <button
        type="submit"
        :disabled="isSubmitting"
        :class="isSubmitting ? 'opacity-50 cursor-not-allowed' : 'hover:bg-primary-dark'"
        class="w-full bg-primary-gold text-white font-medium py-3 px-6 rounded-md transition-all duration-300 shadow-md focus:outline-none focus:ring-2 focus:ring-primary-gold"
      >
        <span x-show="!isSubmitting" class="flex items-center justify-center">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" viewBox="0 0 20 20" fill="currentColor">
            <path d="M2.003 5.884L10 9.882l7.997-3.998A2 2 0 0016 4H4a2 2 0 00-1.997 1.884z" />
            <path d="M18 8.118l-8 4-8-4V14a2 2 0 002 2h12a2 2 0 002-2V8.118z" />
          </svg>
          {leadForm ? 'Kostenlose Beratung anfragen' : 'Nachricht senden'}
        </span>
        <span x-show="isSubmitting" class="flex items-center justify-center">
          <svg class="animate-spin h-5 w-5 mr-2" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
            <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
            <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
          </svg>
          Wird gesendet...
        </span>
      </button>
    </div>

    <!-- Success Message -->
    <template x-if="showSuccess">
      <div class="mt-4 p-4 bg-green-50 dark:bg-green-900/20 border border-green-200 dark:border-green-800 rounded-md">
        <div class="flex items-start">
          <svg class="h-5 w-5 text-green-500 mr-2 mt-0.5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
            <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd" />
          </svg>
          <div>
            <p class="text-sm text-green-700 dark:text-green-300 font-medium">
              Vielen Dank f√ºr Ihre Nachricht!
            </p>
            <p class="text-sm text-green-600 dark:text-green-400 mt-1">
              Wir melden uns schnellstm√∂glich bei Ihnen.
            </p>
          </div>
        </div>
      </div>
    </template>
    
    <!-- Error Message -->
    <template x-if="showError">
      <div class="mt-4 p-4 bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-md">
        <div class="flex items-start">
          <svg class="h-5 w-5 text-red-500 mr-2 mt-0.5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
            <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.28 7.22a.75.75 0 00-1.06 1.06L8.94 10l-1.72 1.72a.75.75 0 101.06 1.06L10 11.06l1.72 1.72a.75.75 0 101.06-1.06L11.06 10l1.72-1.72a.75.75 0 00-1.06-1.06L10 8.94 8.28 7.22z" clip-rule="evenodd" />
          </svg>
          <div>
            <p x-text="errorMessage" class="text-sm text-red-700 dark:text-red-300 font-medium"></p>
            <p class="text-sm text-red-600 dark:text-red-400 mt-1">
              Bei Problemen erreichen Sie uns unter 
              <a href="tel:+497440913367" class="underline">+49 7440 913367</a>
            </p>
          </div>
        </div>
      </div>
    </template>
    
    <!-- Required Fields Note -->
    <p class="text-xs text-text-muted mt-4">
      * Pflichtfelder - Alle Daten werden DSGVO-konform verarbeitet.
    </p>
  </form>
</div>