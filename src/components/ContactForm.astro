---
// src/components/ContactForm.astro v18.0 (Server-Mode & Production optimiert)
// ContactForm - Enhanced form component mit Alpine.js

interface Props {
  leadForm?: boolean;
  showMessage?: boolean;
  variant?: 'default' | 'compact' | 'inline';
  className?: string;
  showDebug?: boolean;
}

const { 
  leadForm = false,
  showMessage = true,
  variant = 'default',
  className = "",
  showDebug = false
} = Astro.props;

// Generate unique form ID for accessibility
const formId = `contact-form-${Math.random().toString(36).substr(2, 9)}`;

// Variant classes
const variants = {
  default: 'space-y-4 md:space-y-6',
  compact: 'space-y-3 md:space-y-4',
  inline: 'space-y-2 md:space-y-3'
};

const inputClasses = {
  default: 'w-full px-4 py-3 rounded-md shadow-sm',
  compact: 'w-full px-3 py-2 rounded-md shadow-sm',
  inline: 'w-full px-3 py-2 rounded text-sm'
};

const buttonClasses = {
  default: 'w-full bg-primary-gold text-white font-medium py-3 px-6 rounded-md',
  compact: 'w-full bg-primary-gold text-white font-medium py-2 px-4 rounded-md text-sm',
  inline: 'w-full bg-primary-gold text-white font-medium py-2 px-4 rounded text-sm'
};

console.log(`üìù ContactForm v18.0 rendered - ${variant} variant, leadForm: ${leadForm}`);
---

<div class={`contact-form-wrapper ${className}`}>
  <form
    id={formId}
    x-data="{
        // ‚úÖ Production Configuration
        showSuccess: false,
        showError: false,
        errorMessage: '',
        isSubmitting: false,
        version: 'Frontend v18.0 (Production)',
        isProduction: !{showDebug},
        leadForm: {leadForm},
        
        formData: {
            name: '',
            email: '',
            phone: '',
            message: '',
            gdprConsent: false,
            honeypot: ''
        },
        
        // ‚úÖ Enhanced & Bulletproof Regex
        regex: {
            name: /^.{2,50}$/,
            email: /^[a-zA-Z0-9.!#$%&'*+\/=?^_\`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/,
            phone: /^[\+]?[\d\s\-\(\)]{6,20}$/
        },
        
        // Fallback simple regex
        simpleRegex: {
            email: /\S+@\S+\.\S+/
        },
        
        validation: {
            name: true,
            email: true,
            phone: true,
            gdprConsent: true
        },

        // ‚úÖ Enhanced Submit Handler
        async submitForm() {
            if (!this.isProduction) {
                console.log('=== FORM SUBMISSION STARTED v18.0 ===');
                console.log('Frontend Version:', this.version);
                console.log('Lead Form:', this.leadForm);
            }
            
            if (this.isSubmitting) {
                if (!this.isProduction) console.log('Form is already being submitted');
                return;
            }
            
            this.resetMessages();
            this.isSubmitting = true;

            // Enhanced validation
            let isValid = this.validateForm();
            if (!isValid) {
                this.showError = true;
                this.errorMessage = 'Bitte korrigieren Sie die markierten Felder und stimmen Sie der Datenschutzerkl√§rung zu.';
                this.isSubmitting = false;
                if (!this.isProduction) console.log('Frontend validation failed v18.0');
                return;
            }

            // Honeypot check
            if (this.formData.honeypot.trim() !== '') {
                if (!this.isProduction) console.log('Honeypot triggered - potential spam');
                this.handleSpam();
                return;
            }

            const cleanFormData = this.prepareFormData();

            try {
                if (!this.isProduction) {
                    console.log('üì§ Sending data to /contact v18.0:', cleanFormData);
                }
                
                const response = await fetch('/contact', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'Accept': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                    body: JSON.stringify(cleanFormData)
                });

                if (!this.isProduction) {
                    console.log('üì• Response status v18.0:', response.status);
                }
                
                await this.handleResponse(response);
                
            } catch (error) {
                if (!this.isProduction) {
                    console.error('‚ùå Network error v18.0:', error);
                }
                this.showError = true;
                this.errorMessage = 'Verbindungsfehler. Bitte versuchen Sie es sp√§ter erneut oder kontaktieren Sie uns direkt.';
            } finally {
                this.isSubmitting = false;
            }
        },

        // ‚úÖ Enhanced Validation with Multiple Fallbacks
        validateForm() {
            let isValid = true;
            this.resetValidation();
            
            // Name validation
            const nameValue = this.formData.name.trim();
            if (!nameValue || !this.regex.name.test(nameValue)) {
                if (!this.isProduction) console.log('‚ùå Name validation failed v18.0');
                this.validation.name = false;
                isValid = false;
            }
            
            // Enhanced email validation with multiple fallbacks
            const emailValue = this.formData.email.trim().toLowerCase();
            const emailValid = this.validateEmail(emailValue);
            
            if (!emailValue || !emailValid) {
                if (!this.isProduction) {
                    console.log('‚ùå Email validation failed v18.0:', emailValue);
                }
                this.validation.email = false;
                isValid = false;
            }
            
            // Phone validation
            const phoneValue = this.formData.phone.trim();
            if (!phoneValue || !this.regex.phone.test(phoneValue)) {
                if (!this.isProduction) console.log('‚ùå Phone validation failed v18.0');
                this.validation.phone = false;
                isValid = false;
            }
            
            // GDPR validation
            if (!this.formData.gdprConsent) {
                if (!this.isProduction) console.log('‚ùå GDPR validation failed v18.0');
                this.validation.gdprConsent = false;
                isValid = false;
            }
            
            if (!this.isProduction) {
                console.log('Overall validation result v18.0:', isValid);
            }
            
            return isValid;
        },

        // ‚úÖ Robust Email Validation
        validateEmail(email) {
            if (!email) return false;
            
            // Multiple validation layers
            const basicCheck = email.includes('@') && email.includes('.') && email.indexOf('@') < email.lastIndexOf('.');
            const regexCheck = this.regex.email.test(email);
            const simpleCheck = this.simpleRegex.email.test(email);
            
            if (!this.isProduction) {
                console.log('Email validation layers v18.0:');
                console.log('- Basic check:', basicCheck);
                console.log('- Regex check:', regexCheck);
                console.log('- Simple check:', simpleCheck);
            }
            
            // At least two validation methods must pass
            const validationPasses = [basicCheck, regexCheck, simpleCheck].filter(Boolean).length >= 2;
            
            return validationPasses;
        },

        // ‚úÖ Prepare Form Data
        prepareFormData() {
            return {
                name: this.formData.name.trim(),
                email: this.formData.email.trim().toLowerCase(),
                phone: this.formData.phone.trim(),
                message: this.formData.message.trim(),
                gdprConsent: this.formData.gdprConsent,
                leadForm: this.leadForm,
                honeypot: this.formData.honeypot.trim(),
                timestamp: new Date().toISOString(),
                userAgent: navigator.userAgent,
                referrer: document.referrer
            };
        },

        // ‚úÖ Enhanced Response Handling
        async handleResponse(response) {
            let result;
            
            try {
                const contentType = response.headers.get('content-type');
                if (contentType && contentType.includes('application/json')) {
                    result = await response.json();
                } else {
                    throw new Error('Invalid response format');
                }
                
                if (!this.isProduction) {
                    console.log('‚úÖ Response data v18.0:', result);
                }
            } catch (parseError) {
                if (!this.isProduction) {
                    console.error('‚ùå Failed to parse response JSON v18.0:', parseError);
                }
                this.showError = true;
                this.errorMessage = 'Serverfehler. Bitte versuchen Sie es sp√§ter erneut.';
                return;
            }
            
            if (response.ok && result.success) {
                if (!this.isProduction) {
                    console.log('üéâ Success! Showing success message v18.0');
                }
                this.showSuccess = true;
                this.showError = false;
                this.resetForm();
                
                // Analytics tracking (if available)
                if (typeof gtag !== 'undefined') {
                    gtag('event', 'form_submit', {
                        event_category: 'Contact',
                        event_label: this.leadForm ? 'Lead Form' : 'Contact Form',
                        value: 1
                    });
                }
            } else {
                this.showError = true;
                this.errorMessage = result.message || 'Ein Fehler ist aufgetreten. Bitte versuchen Sie es erneut.';
                
                // Log server errors in production for debugging
                if (this.isProduction && result.error) {
                    console.error('Server error:', result.error);
                }
            }
        },

        // ‚úÖ Spam Handling
        handleSpam() {
            // Silently fail for spam attempts
            setTimeout(() => {
                this.showSuccess = true;
                this.resetForm();
                this.isSubmitting = false;
            }, 1000);
            
            if (!this.isProduction) {
                console.log('Spam attempt blocked via honeypot');
            }
        },

        // ‚úÖ Utility Functions
        resetMessages() {
            this.showSuccess = false;
            this.showError = false;
            this.errorMessage = '';
        },

        resetValidation() {
            this.validation.name = true;
            this.validation.email = true;
            this.validation.phone = true;
            this.validation.gdprConsent = true;
        },

        resetForm() {
            this.formData.name = '';
            this.formData.email = '';
            this.formData.phone = '';
            this.formData.message = '';
            this.formData.gdprConsent = false;
            this.formData.honeypot = '';
            this.resetValidation();
        },

        // ‚úÖ Accessibility Helpers
        getAriaDescribedBy(field) {
            return !this.validation[field] ? `${field}-error` : null;
        }
    }"
    x-on:submit.prevent="submitForm"
    class={variants[variant]}
    novalidate
    aria-labelledby={`${formId}-title`}
  >
    <!-- Form Title (Screen Reader) -->
    <h2 id={`${formId}-title`} class="sr-only">
      {leadForm ? 'Lead-Formular' : 'Kontaktformular'}
    </h2>

    <!-- Name Field -->
    <div>
      <label for={`${formId}-name`} class="block text-sm font-medium text-text-dark dark:text-text-light mb-2">
        Name *
      </label>
      <input
        type="text"
        id={`${formId}-name`}
        name="name"
        x-model="formData.name"
        :class="!validation.name ? 'border-red-500 focus:border-red-500 focus:ring-red-500' : 'border-light-darkest dark:border-dark-lightest focus:border-primary-gold focus:ring-primary-gold'"
        :aria-describedby="getAriaDescribedBy('name')"
        :aria-invalid="!validation.name"
        class={`${inputClasses[variant]} bg-light-darker dark:bg-dark-lighter text-text-dark dark:text-text-light placeholder-text-muted focus:outline-none focus:ring-2 transition-colors duration-300`}
        required
        autocomplete="name"
        placeholder="Ihr vollst√§ndiger Name"
        maxlength="50"
      />
      <template x-if="!validation.name">
        <p id={`${formId}-name-error`} class="mt-2 text-sm text-red-600 dark:text-red-400" role="alert">
          Bitte geben Sie Ihren Namen ein (2-50 Zeichen).
        </p>
      </template>
    </div>

    <!-- Email Field -->
    <div>
      <label for={`${formId}-email`} class="block text-sm font-medium text-text-dark dark:text-text-light mb-2">
        E-Mail *
      </label>
      <input
        type="email"
        id={`${formId}-email`}
        name="email"
        x-model="formData.email"
        :class="!validation.email ? 'border-red-500 focus:border-red-500 focus:ring-red-500' : 'border-light-darkest dark:border-dark-lightest focus:border-primary-gold focus:ring-primary-gold'"
        :aria-describedby="getAriaDescribedBy('email')"
        :aria-invalid="!validation.email"
        class={`${inputClasses[variant]} bg-light-darker dark:bg-dark-lighter text-text-dark dark:text-text-light placeholder-text-muted focus:outline-none focus:ring-2 transition-colors duration-300`}
        required
        autocomplete="email"
        placeholder="ihre.email@beispiel.de"
        maxlength="100"
      />
      <template x-if="!validation.email">
        <p id={`${formId}-email-error`} class="mt-2 text-sm text-red-600 dark:text-red-400" role="alert">
          Bitte geben Sie eine g√ºltige E-Mail-Adresse ein.
        </p>
      </template>
    </div>

    <!-- Phone Field -->
    <div>
      <label for={`${formId}-phone`} class="block text-sm font-medium text-text-dark dark:text-text-light mb-2">
        Telefon *
      </label>
      <input
        type="tel"
        id={`${formId}-phone`}
        name="phone"
        x-model="formData.phone"
        :class="!validation.phone ? 'border-red-500 focus:border-red-500 focus:ring-red-500' : 'border-light-darkest dark:border-dark-lightest focus:border-primary-gold focus:ring-primary-gold'"
        :aria-describedby="getAriaDescribedBy('phone')"
        :aria-invalid="!validation.phone"
        class={`${inputClasses[variant]} bg-light-darker dark:bg-dark-lighter text-text-dark dark:text-text-light placeholder-text-muted focus:outline-none focus:ring-2 transition-colors duration-300`}
        required
        autocomplete="tel"
        placeholder="+49 123 456789"
        maxlength="20"
      />
      <template x-if="!validation.phone">
        <p id={`${formId}-phone-error`} class="mt-2 text-sm text-red-600 dark:text-red-400" role="alert">
          Bitte geben Sie eine g√ºltige Telefonnummer ein.
        </p>
      </template>
    </div>

    <!-- Message Field (conditional) -->
    {showMessage && (
      <div>
        <label for={`${formId}-message`} class="block text-sm font-medium text-text-dark dark:text-text-light mb-2">
          Ihre Nachricht
        </label>
        <textarea
          id={`${formId}-message`}
          name="message"
          x-model="formData.message"
          rows={variant === 'compact' ? 3 : 4}
          class={`${inputClasses[variant]} border border-light-darkest dark:border-dark-lightest bg-light-darker dark:bg-dark-lighter text-text-dark dark:text-text-light placeholder-text-muted focus:outline-none focus:ring-2 focus:border-primary-gold focus:ring-primary-gold transition-colors duration-300`}
          placeholder="Beschreiben Sie kurz Ihr Anliegen..."
          maxlength="1000"
        />
      </div>
    )}

    <!-- Honeypot Field (hidden) -->
    <div class="honeypot" style="position: absolute; left: -9999px; opacity: 0; height: 1px; overflow: hidden; pointer-events: none;" aria-hidden="true">
      <label for={`${formId}-honeypot`}>Bitte dieses Feld nicht ausf√ºllen:</label>
      <input
        type="text"
        id={`${formId}-honeypot`}
        name="honeypot"
        x-model="formData.honeypot"
        autocomplete="off"
        tabindex="-1"
      />
    </div>

    <!-- GDPR Consent -->
    <div class="flex items-start space-x-3">
      <input
        type="checkbox"
        id={`${formId}-gdpr`}
        name="gdprConsent"
        x-model="formData.gdprConsent"
        :class="!validation.gdprConsent ? 'border-red-500 focus:ring-red-500' : 'focus:ring-primary-gold'"
        :aria-describedby="getAriaDescribedBy('gdprConsent')"
        :aria-invalid="!validation.gdprConsent"
        class="mt-1 h-4 w-4 text-primary-gold border-light-darkest dark:border-dark-lightest rounded focus:ring-2 bg-light-darker dark:bg-dark-lighter"
        required
      />
      <label for={`${formId}-gdpr`} class="text-sm text-text-dark dark:text-text-light">
        Ich stimme der 
        <a href="/datenschutz" class="text-primary-gold hover:underline" target="_blank" rel="noopener noreferrer">
          Datenschutzerkl√§rung
        </a> 
        zu. *
      </label>
    </div>
    <template x-if="!validation.gdprConsent">
      <p id={`${formId}-gdpr-error`} class="text-sm text-red-600 dark:text-red-400" role="alert">
        Bitte stimmen Sie der Datenschutzerkl√§rung zu.
      </p>
    </template>

    <!-- Submit Button -->
    <div class="pt-2">
      <button
        type="submit"
        :disabled="isSubmitting"
        :class="isSubmitting ? 'opacity-50 cursor-not-allowed' : 'hover:bg-primary-dark'"
        class={`${buttonClasses[variant]} transition-all duration-300 shadow-md focus:outline-none focus:ring-2 focus:ring-primary-gold focus:ring-offset-2 focus:ring-offset-light dark:focus:ring-offset-dark disabled:cursor-not-allowed`}
        :aria-describedby="isSubmitting ? `${formId}-submit-status` : null"
      >
        <span x-show="!isSubmitting" class="flex items-center justify-center">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
            <path d="M2.003 5.884L10 9.882l7.997-3.998A2 2 0 0016 4H4a2 2 0 00-1.997 1.884z" />
            <path d="M18 8.118l-8 4-8-4V14a2 2 0 002 2h12a2 2 0 002-2V8.118z" />
          </svg>
          {leadForm ? 'Kostenlose Beratung anfragen' : 'Nachricht senden'}
        </span>
        <span x-show="isSubmitting" class="flex items-center justify-center">
          <svg class="animate-spin -ml-1 mr-3 h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" aria-hidden="true">
            <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
            <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
          </svg>
          <span id={`${formId}-submit-status`}>Wird gesendet...</span>
        </span>
      </button>
    </div>

    <!-- Success Message -->
    <template x-if="showSuccess">
      <div class="mt-4 p-4 bg-green-50 dark:bg-green-900/20 border border-green-200 dark:border-green-800 rounded-md" role="alert" aria-live="polite">
        <div class="flex items-start">
          <svg class="h-5 w-5 text-green-500 mr-2 mt-0.5 flex-shrink-0" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
            <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd" />
          </svg>
          <div>
            <p class="text-sm text-green-700 dark:text-green-300 font-medium">
              Vielen Dank f√ºr Ihre Nachricht!
            </p>
            <p class="text-sm text-green-600 dark:text-green-400 mt-1">
              Wir melden uns schnellstm√∂glich bei Ihnen - in der Regel innerhalb von 24 Stunden.
            </p>
          </div>
        </div>
      </div>
    </template>
    
    <!-- Error Message -->
    <template x-if="showError">
      <div class="mt-4 p-4 bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-md" role="alert" aria-live="assertive">
        <div class="flex items-start">
          <svg class="h-5 w-5 text-red-500 mr-2 mt-0.5 flex-shrink-0" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
            <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.28 7.22a.75.75 0 00-1.06 1.06L8.94 10l-1.72 1.72a.75.75 0 101.06 1.06L10 11.06l1.72 1.72a.75.75 0 101.06-1.06L11.06 10l1.72-1.72a.75.75 0 00-1.06-1.06L10 8.94 8.28 7.22z" clip-rule="evenodd" />
          </svg>
          <div>
            <p x-text="errorMessage" class="text-sm text-red-700 dark:text-red-300 font-medium"></p>
            <p class="text-sm text-red-600 dark:text-red-400 mt-1">
              Bei weiteren Problemen k√∂nnen Sie uns auch direkt unter 
              <a href="tel:+497440913367" class="text-red-700 dark:text-red-300 underline hover:no-underline">
                +497440 913367
              </a> erreichen.
            </p>
          </div>
        </div>
      </div>
    </template>
    
    <!-- Required Fields Note -->
    <p class="text-xs text-text-muted mt-4" role="note">
      * Pflichtfelder - Alle Daten werden verschl√ºsselt √ºbertragen und DSGVO-konform verarbeitet.
    </p>
    
    <!-- Debug Info (Development Only) -->
    {showDebug && (
      <div class="mt-4 p-3 bg-gray-100 dark:bg-gray-800 rounded text-xs font-mono" x-show="!isProduction">
        <details>
          <summary class="cursor-pointer font-bold mb-2">Debug Info v18.0</summary>
          <div class="space-y-1">
            <div>Version: <span x-text="version" class="text-blue-600"></span></div>
            <div>Lead Form: <span x-text="leadForm" class="text-blue-600"></span></div>
            <div>Email: <span x-text="JSON.stringify(formData.email)" class="text-green-600"></span></div>
            <div>Email Valid: <span x-text="validation.email" class="text-green-600"></span></div>
            <div>Form Valid: <span x-text="validation.name && validation.email && validation.phone && validation.gdprConsent" class="text-green-600"></span></div>
          </div>
        </details>
      </div>
    )}
  </form>
</div>

<style>
  /* Screen reader only class */
  .sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
  }

  /* Enhanced focus styles */
  .contact-form-wrapper input:focus,
  .contact-form-wrapper textarea:focus,
  .contact-form-wrapper button:focus {
    box-shadow: 0 0 0 2px var(--primary-gold), 0 0 0 4px rgba(210, 174, 108, 0.2);
  }

  /* Honeypot protection */
  .honeypot {
    position: absolute !important;
    left: -9999px !important;
    opacity: 0 !important;
    height: 1px !important;
    overflow: hidden !important;
    pointer-events: none !important;
  }

  /* High contrast mode support */
  @media (prefers-contrast: high) {
    .contact-form-wrapper input,
    .contact-form-wrapper textarea {
      border-width: 2px;
    }

    .contact-form-wrapper button {
      border: 2px solid currentColor;
    }
  }

  /* Reduced motion support */
  @media (prefers-reduced-motion: reduce) {
    .contact-form-wrapper * {
      transition-duration: 0.01ms !important;
    }

    .animate-spin {
      animation: none;
    }
  }

  /* Print styles */
  @media print {
    .contact-form-wrapper {
      break-inside: avoid;
    }

    .contact-form-wrapper button {
      display: none;
    }
  }
</style>