---
// ContactForm.astro v18.9 (E-Mail Integration Enhanced)
// Contact Form Component - E-Mail-Status Integration
// ✅ ÄNDERUNGEN v18.9:
// - E-Mail-Status im Success-Message angezeigt
// - Enhanced Response-Handling für E-Mail-Bestätigung
// - Lead-Form Unterscheidung in Success-Message
// - Verbesserte Error-Behandlung für E-Mail-Versand
// - Integration mit contact.js v17.10 E-Mail-Features

const { showTitle = true, leadForm = false } = Astro.props;
---

<div class="contact-form-container">
  {showTitle && (
    <div class="contact-form-header">
      <h2 class="contact-form-title">
        {leadForm ? '🎯 Interesse an unseren Leistungen?' : '📞 Kontakt aufnehmen'}
      </h2>
      <p class="contact-form-subtitle">
        {leadForm 
          ? 'Lassen Sie uns über Ihre Herausforderungen sprechen. Wir melden uns schnellstmöglich bei Ihnen.'
          : 'Haben Sie Fragen oder möchten Sie einen Beratungstermin vereinbaren? Schreiben Sie uns!'
        }
      </p>
    </div>
  )}

  <!-- ✅ KONTAKTFORMULAR v18.9 -->
  <form 
    id="contactForm"
    x-data="contactFormData()"
    @submit.prevent="submitForm()"
    class="contact-form"
  >
    <!-- ✅ HONEYPOT SCHUTZ -->
    <input 
      type="text" 
      name="website" 
      x-model="formData.honeypot"
      style="display: none !important;" 
      tabindex="-1" 
      autocomplete="off"
    >

    <!-- ✅ NAME FIELD -->
    <div class="form-group">
      <label for="name" class="form-label">
        Name <span class="required">*</span>
      </label>
      <input
        type="text"
        id="name"
        name="name"
        x-model="formData.name"
        class="form-input"
        :class="{ 'error': errors.name }"
        placeholder="Ihr vollständiger Name"
        required
        maxlength="100"
        @input="clearFieldError('name')"
      >
      <div x-show="errors.name" x-text="errors.name" class="error-message"></div>
    </div>

    <!-- ✅ EMAIL FIELD -->
    <div class="form-group">
      <label for="email" class="form-label">
        E-Mail-Adresse <span class="required">*</span>
      </label>
      <input
        type="email"
        id="email"
        name="email"
        x-model="formData.email"
        class="form-input"
        :class="{ 'error': errors.email }"
        placeholder="ihre.email@beispiel.de"
        required
        maxlength="255"
        @input="clearFieldError('email')"
      >
      <div x-show="errors.email" x-text="errors.email" class="error-message"></div>
    </div>

    <!-- ✅ PHONE FIELD -->
    <div class="form-group">
      <label for="phone" class="form-label">
        Telefonnummer <span class="required">*</span>
      </label>
      <input
        type="tel"
        id="phone"
        name="phone"
        x-model="formData.phone"
        class="form-input"
        :class="{ 'error': errors.phone }"
        placeholder="+49 123 456789"
        required
        maxlength="25"
        @input="clearFieldError('phone')"
      >
      <div x-show="errors.phone" x-text="errors.phone" class="error-message"></div>
    </div>

    <!-- ✅ MESSAGE FIELD -->
    <div class="form-group">
      <label for="message" class="form-label">
        {leadForm ? 'Beschreiben Sie Ihre Herausforderung' : 'Nachricht'}
        {!leadForm && <span class="optional">(optional)</span>}
      </label>
      <textarea
        id="message"
        name="message"
        x-model="formData.message"
        class="form-textarea"
        :class="{ 'error': errors.message }"
        placeholder={leadForm 
          ? "Beschreiben Sie kurz Ihre aktuelle Situation und wobei wir Ihnen helfen können..."
          : "Ihre Nachricht an uns..."
        }
        rows="4"
        maxlength="2000"
        @input="clearFieldError('message')"
      ></textarea>
      <div x-show="errors.message" x-text="errors.message" class="error-message"></div>
      <div class="char-counter">
        <span x-text="formData.message.length"></span>/2000 Zeichen
      </div>
    </div>

    <!-- ✅ GDPR CHECKBOX -->
    <div class="form-group gdpr-group">
      <label class="checkbox-label">
        <input
          type="checkbox"
          name="gdprConsent"
          x-model="formData.gdprConsent"
          class="checkbox-input"
          :class="{ 'error': errors.gdprConsent }"
          required
          @change="clearFieldError('gdprConsent')"
        >
        <span class="checkbox-custom"></span>
        <span class="checkbox-text">
          Ich stimme der <a href="/datenschutz" target="_blank" class="privacy-link">Datenschutzerklärung</a> zu und bin damit einverstanden, dass meine Daten zur Bearbeitung meiner Anfrage gespeichert werden. <span class="required">*</span>
        </span>
      </label>
      <div x-show="errors.gdprConsent" x-text="errors.gdprConsent" class="error-message"></div>
    </div>

    <!-- ✅ SUBMIT BUTTON mit E-Mail Loading-Status -->
    <div class="form-submit">
      <button
        type="submit"
        class="submit-btn"
        :disabled="isSubmitting"
        :class="{ 'loading': isSubmitting }"
      >
        <span x-show="!isSubmitting">
          {leadForm ? '🎯 Anfrage senden' : '📧 Nachricht senden'}
        </span>
        <span x-show="isSubmitting" class="loading-content">
          <span class="loading-spinner"></span>
          <span x-text="loadingText">Wird gesendet...</span>
        </span>
      </button>
    </div>

    <!-- ✅ SUCCESS MESSAGE v18.9 - Enhanced mit E-Mail-Status -->
    <div 
      x-show="showSuccessMessage" 
      x-transition:enter="transition ease-out duration-300"
      x-transition:enter-start="opacity-0 transform scale-95"
      x-transition:enter-end="opacity-100 transform scale-100"
      class="success-message"
    >
      <div class="success-icon">✅</div>
      <div class="success-content">
        <h3 x-text="successTitle"></h3>
        <div x-html="successMessage"></div>
        
        <!-- ✅ E-MAIL STATUS ANZEIGE v18.9 -->
        <div x-show="emailStatus" class="email-status" x-transition>
          <div class="email-status-header">
            <span class="email-icon">📧</span>
            <strong>E-Mail-Status:</strong>
          </div>
          
          <div class="email-status-items">
            <!-- Bestätigungs-E-Mail Status -->
            <div class="email-status-item" x-show="emailStatus.confirmation">
              <span x-show="emailStatus.confirmation.sent" class="status-success">
                ✅ Bestätigungs-E-Mail an Sie gesendet
              </span>
              <span x-show="!emailStatus.confirmation.sent" class="status-warning">
                ⚠️ Bestätigungs-E-Mail konnte nicht gesendet werden
              </span>
              <div class="status-detail" x-text="emailStatus.confirmation.recipient"></div>
            </div>
            
            <!-- Admin-Benachrichtigung Status -->
            <div class="email-status-item" x-show="emailStatus.admin">
              <span x-show="emailStatus.admin.sent" class="status-success">
                ✅ Admin-Benachrichtigung gesendet
              </span>
              <span x-show="!emailStatus.admin.sent" class="status-warning">
                ⚠️ Admin-Benachrichtigung fehlgeschlagen
              </span>
              <div class="status-detail">
                <span x-text="emailStatus.admin.priority"></span>
                <span x-show="emailStatus.admin.priority === 'HIGH (Lead)'" class="lead-badge">🎯 LEAD</span>
              </div>
            </div>
          </div>
          
          <!-- E-Mail Fehler anzeigen -->
          <div x-show="emailStatus.errors && emailStatus.errors.length > 0" class="email-errors">
            <div class="email-errors-header">⚠️ E-Mail-Probleme:</div>
            <template x-for="error in emailStatus.errors" :key="error">
              <div class="email-error-item" x-text="error"></div>
            </template>
          </div>
        </div>
        
        <!-- Kontakt-Info für direkten Kontakt -->
        <div class="contact-backup">
          <p><strong>Alternativ erreichen Sie uns direkt:</strong></p>
          <div class="contact-methods">
            <a href="tel:+497440913367" class="contact-method">
              📞 +49 7440 913367
            </a>
            <a href="mailto:webmaster@maier-value.com" class="contact-method">
              ✉️ webmaster@maier-value.com
            </a>
          </div>
        </div>
      </div>
    </div>

    <!-- ✅ ERROR MESSAGE -->
    <div 
      x-show="showErrorMessage" 
      x-transition:enter="transition ease-out duration-300"
      x-transition:enter-start="opacity-0 transform scale-95"
      x-transition:enter-end="opacity-100 transform scale-100"
      class="error-message-container"
    >
      <div class="error-icon">❌</div>
      <div class="error-content">
        <h3>Fehler beim Senden</h3>
        <div x-html="errorMessage"></div>
        <div class="contact-backup">
          <p><strong>Bitte kontaktieren Sie uns direkt:</strong></p>
          <div class="contact-methods">
            <a href="tel:+497440913367" class="contact-method">
              📞 +49 7440 913367
            </a>
            <a href="mailto:webmaster@maier-value.com" class="contact-method">
              ✉️ webmaster@maier-value.com
            </a>
          </div>
        </div>
      </div>
    </div>
  </form>
</div>

<script define:vars={{ leadForm }}>
  function contactFormData() {
    return {
      // ✅ FORM DATA v18.9
      formData: {
        name: '',
        email: '',
        phone: '',
        message: '',
        gdprConsent: false,
        honeypot: '',
        leadForm: leadForm
      },
      
      // ✅ STATE MANAGEMENT v18.9
      isSubmitting: false,
      showSuccessMessage: false,
      showErrorMessage: false,
      loadingText: 'Wird gesendet...',
      
      // ✅ MESSAGES v18.9
      successTitle: '',
      successMessage: '',
      errorMessage: '',
      
      // ✅ E-MAIL STATUS v18.9
      emailStatus: null,
      
      // ✅ VALIDATION
      errors: {},

      // ✅ CLEAR FIELD ERROR
      clearFieldError(field) {
        delete this.errors[field];
      },

      // ✅ CLIENT-SIDE VALIDATION v18.9
      validateForm() {
        this.errors = {};
        let isValid = true;

        // Name validation
        if (!this.formData.name || this.formData.name.trim().length < 2) {
          this.errors.name = 'Name muss mindestens 2 Zeichen lang sein';
          isValid = false;
        } else if (this.formData.name.trim().length > 100) {
          this.errors.name = 'Name darf maximal 100 Zeichen lang sein';
          isValid = false;
        }

        // Email validation
        const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
        if (!this.formData.email || !emailRegex.test(this.formData.email.trim())) {
          this.errors.email = 'Gültige E-Mail-Adresse erforderlich';
          isValid = false;
        } else if (this.formData.email.trim().length > 255) {
          this.errors.email = 'E-Mail-Adresse darf maximal 255 Zeichen lang sein';
          isValid = false;
        }

        // Phone validation
        if (!this.formData.phone || this.formData.phone.trim().length < 6) {
          this.errors.phone = 'Telefonnummer muss mindestens 6 Zeichen lang sein';
          isValid = false;
        } else if (this.formData.phone.trim().length > 25) {
          this.errors.phone = 'Telefonnummer darf maximal 25 Zeichen lang sein';
          isValid = false;
        }

        // Message validation (optional, but if provided)
        if (this.formData.message && this.formData.message.trim().length > 2000) {
          this.errors.message = 'Nachricht darf maximal 2000 Zeichen lang sein';
          isValid = false;
        }

        // GDPR validation
        if (!this.formData.gdprConsent) {
          this.errors.gdprConsent = 'Zustimmung zur Datenschutzerklärung ist erforderlich';
          isValid = false;
        }

        return isValid;
      },

      // ✅ FORM SUBMISSION v18.9 mit E-Mail-Integration
      async submitForm() {
        console.log('📧 ContactForm v18.9: Submit started');
        
        // Reset states
        this.showSuccessMessage = false;
        this.showErrorMessage = false;
        this.emailStatus = null;
        
        // Validate form
        if (!this.validateForm()) {
          console.log('❌ Validation failed:', this.errors);
          return;
        }

        // Start submission
        this.isSubmitting = true;
        this.loadingText = 'Wird gesendet...';

        try {
          console.log('📤 Sending form data to API v18.9');
          
          const response = await fetch('/api/contact', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify(this.formData)
          });

          const result = await response.json();
          console.log('📥 API Response v18.9:', result);

          if (result.success) {
            // ✅ SUCCESS HANDLING v18.9
            this.successTitle = this.formData.leadForm 
              ? '🎯 Lead-Anfrage erfolgreich gesendet!'
              : '✅ Nachricht erfolgreich gesendet!';
            
            // Enhanced Success Message mit E-Mail-Status
            this.successMessage = `
              <p><strong>Vielen Dank, ${this.formData.name}!</strong></p>
              <p>${result.message}</p>
              ${result.emails && result.emails.sent 
                ? '<p class="email-success">📧 <strong>E-Mail-Bestätigung:</strong> Sie erhalten in Kürze eine Bestätigungs-E-Mail.</p>'
                : '<p class="email-warning">⚠️ <strong>E-Mail-Hinweis:</strong> E-Mail-Versand hatte Probleme, aber Ihre Anfrage wurde gespeichert.</p>'
              }
            `;
            
            // ✅ E-MAIL STATUS SETZEN v18.9
            if (result.emails) {
              this.emailStatus = {
                confirmation: result.emails.confirmation || null,
                admin: result.emails.admin || null,
                errors: result.emails.errors || []
              };
              
              console.log('📧 Email Status set v18.9:', this.emailStatus);
            }
            
            this.showSuccessMessage = true;
            
            // Form zurücksetzen nach Erfolg
            setTimeout(() => {
              this.resetForm();
            }, 3000);

          } else {
            // ✅ ERROR HANDLING v18.9
            console.error('❌ API Error v18.9:', result);
            
            this.errorMessage = `
              <p><strong>${result.message || 'Ein Fehler ist aufgetreten'}</strong></p>
              ${result.errors && result.errors.length > 0 
                ? '<ul>' + result.errors.map(error => `<li>${error}</li>`).join('') + '</ul>'
                : ''
              }
            `;
            
            this.showErrorMessage = true;
          }

        } catch (error) {
          console.error('❌ Network Error v18.9:', error);
          
          this.errorMessage = `
            <p><strong>Verbindungsfehler</strong></p>
            <p>Die Nachricht konnte nicht gesendet werden. Bitte prüfen Sie Ihre Internetverbindung und versuchen Sie es erneut.</p>
          `;
          
          this.showErrorMessage = true;
        } finally {
          this.isSubmitting = false;
        }
      },

      // ✅ RESET FORM
      resetForm() {
        this.formData = {
          name: '',
          email: '',
          phone: '',
          message: '',
          gdprConsent: false,
          honeypot: '',
          leadForm: leadForm
        };
        this.errors = {};
        this.showSuccessMessage = false;
        this.showErrorMessage = false;
        this.emailStatus = null;
      }
    }
  }
</script>