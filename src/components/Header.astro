---
// Header.astro v1.3 - HTML Structure Fix
// CHANGELOG v1.3:
// - ✅ FIX: Korrektes <header> HTML-Element hinzugefügt
// - ✅ FIX: Alle data-attributes für JavaScript korrekt gesetzt
// - ✅ FIX: Desktop Service-Buttons mit lg:flex lg:space-x-4
// - ✅ FIX: Mobile Menu Toggle funktional
// - ✅ KEEP: Primary Gold #D2AE6C Design
// - ✅ KEEP: Dark Mode Toggle integriert

// Navigation Items
const navigationItems = [
  { href: '#services', label: 'Services', icon: 'briefcase' },
  { href: '#about', label: 'Über mich', icon: 'user' },
  { href: '#process', label: 'Prozess', icon: 'cog' },
  { href: '#contact', label: 'Kontakt', icon: 'mail' }
];

// Service Buttons für Desktop
const serviceButtons = [
  { href: '#services', label: 'Strategie', service: 'strategy' },
  { href: '#services', label: 'Vertrieb', service: 'sales' },
  { href: '#services', label: 'Marketing', service: 'marketing' },
  { href: '#services', label: 'Value Mgmt', service: 'value' }
];
---

<header class="fixed top-0 left-0 right-0 z-50 bg-white/95 dark:bg-gray-900/95 backdrop-blur-md shadow-sm transition-all duration-300">
  <div class="container mx-auto px-4 sm:px-6">
    <div class="flex items-center justify-between h-16">
      
      <!-- Logo -->
      <div class="flex-shrink-0">
        <a href="/" class="flex items-center space-x-2 group">
          <div class="w-10 h-10 bg-primary-gold rounded-lg flex items-center justify-center group-hover:scale-105 transition-transform duration-200">
            <span class="text-white font-bold text-lg">DM</span>
          </div>
          <div class="hidden sm:block">
            <span class="text-xl font-bold text-gray-900 dark:text-white">Dominik Maier</span>
            <div class="text-sm text-gray-600 dark:text-gray-300">Interim Management</div>
          </div>
        </a>
      </div>

      <!-- Desktop Navigation & Service Buttons -->
      <div class="hidden lg:flex lg:items-center lg:space-x-8">
        
        <!-- Service Buttons -->
        <div class="flex items-center space-x-4">
          {serviceButtons.map((service) => (
            <a 
              href={service.href}
              data-service={service.service}
              class="px-3 py-2 text-sm font-medium text-gray-700 dark:text-gray-300 hover:text-primary-gold dark:hover:text-primary-gold transition-colors duration-200 border border-gray-200 dark:border-gray-700 rounded-lg hover:border-primary-gold dark:hover:border-primary-gold"
            >
              {service.label}
            </a>
          ))}
        </div>

        <!-- Main Navigation -->
        <nav class="flex items-center space-x-6">
          {navigationItems.map((item) => (
            <a 
              href={item.href}
              class="text-gray-700 dark:text-gray-300 hover:text-primary-gold dark:hover:text-primary-gold font-medium transition-colors duration-200"
            >
              {item.label}
            </a>
          ))}
        </nav>
      </div>

      <!-- Right Side: Theme Toggle, Social, CTA -->
      <div class="flex items-center space-x-4">
        
        <!-- Theme Toggle -->
        <button 
          data-theme-toggle
          class="p-2 rounded-lg bg-gray-100 dark:bg-gray-800 hover:bg-gray-200 dark:hover:bg-gray-700 transition-colors duration-200"
          aria-label="Theme umschalten"
        >
          <svg class="w-5 h-5 text-gray-700 dark:text-gray-300 block dark:hidden" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z"/>
          </svg>
          <svg class="w-5 h-5 text-gray-300 hidden dark:block" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z"/>
          </svg>
        </button>

        <!-- LinkedIn -->
        <a 
          href="https://linkedin.com/in/dominik-maier" 
          target="_blank"
          rel="noopener noreferrer"
          class="hidden sm:flex items-center justify-center w-10 h-10 rounded-lg bg-gray-100 dark:bg-gray-800 hover:bg-primary-gold/10 dark:hover:bg-primary-gold/10 transition-colors duration-200"
          aria-label="LinkedIn Profil"
        >
          <svg class="w-5 h-5 text-gray-700 dark:text-gray-300" fill="currentColor" viewBox="0 0 24 24">
            <path d="M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z"/>
          </svg>
        </a>

        <!-- CTA Button -->
        <a 
          href="#contact"
          class="bg-primary-gold hover:bg-primary-gold/90 text-white px-4 py-2 rounded-lg font-medium transition-colors duration-200 hidden sm:block"
        >
          Beratung anfragen
        </a>

        <!-- Mobile Menu Button -->
        <button 
          data-mobile-menu-toggle
          class="lg:hidden p-2 rounded-lg bg-gray-100 dark:bg-gray-800 hover:bg-gray-200 dark:hover:bg-gray-700 transition-colors duration-200"
          aria-label="Menü öffnen"
        >
          <svg class="w-6 h-6 text-gray-700 dark:text-gray-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"/>
          </svg>
        </button>
      </div>
    </div>

    <!-- Mobile Menu -->
    <div 
      data-mobile-menu
      class="lg:hidden hidden border-t border-gray-200 dark:border-gray-700 bg-white/95 dark:bg-gray-900/95 backdrop-blur-md"
    >
      <div class="px-4 py-4 space-y-4">
        
        <!-- Mobile Service Buttons -->
        <div class="space-y-2">
          <div class="text-sm font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wide">Services</div>
          {serviceButtons.map((service) => (
            <a 
              href={service.href}
              data-service={service.service}
              class="block px-3 py-2 text-sm font-medium text-gray-700 dark:text-gray-300 hover:text-primary-gold dark:hover:text-primary-gold transition-colors duration-200 border border-gray-200 dark:border-gray-700 rounded-lg hover:border-primary-gold dark:hover:border-primary-gold"
            >
              {service.label}
            </a>
          ))}
        </div>

        <!-- Mobile Navigation -->
        <div class="space-y-2 border-t border-gray-200 dark:border-gray-700 pt-4">
          {navigationItems.map((item) => (
            <a 
              href={item.href}
              class="block px-3 py-2 text-base font-medium text-gray-700 dark:text-gray-300 hover:text-primary-gold dark:hover:text-primary-gold transition-colors duration-200"
            >
              {item.label}
            </a>
          ))}
        </div>

        <!-- Mobile CTA -->
        <div class="border-t border-gray-200 dark:border-gray-700 pt-4">
          <a 
            href="#contact"
            class="block w-full text-center bg-primary-gold hover:bg-primary-gold/90 text-white px-4 py-3 rounded-lg font-medium transition-colors duration-200"
          >
            Beratung anfragen
          </a>
        </div>
      </div>
    </div>
  </div>
</header>

<script>
// Header.astro v1.3 JavaScript - Fixed DOM Structure
document.addEventListener('DOMContentLoaded', function() {
  
  // Mobile Menu Toggle
  const mobileMenuToggle = document.querySelector('[data-mobile-menu-toggle]');
  const mobileMenu = document.querySelector('[data-mobile-menu]');
  
  if (mobileMenuToggle && mobileMenu) {
    mobileMenuToggle.addEventListener('click', function() {
      mobileMenu.classList.toggle('hidden');
      
      // Toggle Button Icon
      const icon = mobileMenuToggle.querySelector('svg');
      if (mobileMenu.classList.contains('hidden')) {
        icon.innerHTML = '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"/>';
      } else {
        icon.innerHTML = '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"/>';
      }
    });
  }

  // Theme Toggle
  const themeToggle = document.querySelector('[data-theme-toggle]');
  
  if (themeToggle) {
    themeToggle.addEventListener('click', function() {
      const html = document.documentElement;
      
      if (html.classList.contains('dark')) {
        html.classList.remove('dark');
        localStorage.setItem('theme', 'light');
      } else {
        html.classList.add('dark');
        localStorage.setItem('theme', 'dark');
      }
    });
  }

  // Service Button Interactions
  const serviceButtons = document.querySelectorAll('[data-service]');
  serviceButtons.forEach(button => {
    button.addEventListener('click', function(e) {
      const service = this.getAttribute('data-service');
      console.log('Service clicked:', service);
      
      // Hier kannst du weitere Service-spezifische Aktionen hinzufügen
      // z.B. Scroll zu entsprechenden Bereichen, Analytics, etc.
    });
  });

  // Close mobile menu when clicking navigation links
  const mobileNavLinks = document.querySelectorAll('[data-mobile-menu] a');
  mobileNavLinks.forEach(link => {
    link.addEventListener('click', function() {
      if (mobileMenu) {
        mobileMenu.classList.add('hidden');
        // Reset menu button icon
        const icon = mobileMenuToggle?.querySelector('svg');
        if (icon) {
          icon.innerHTML = '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"/>';
        }
      }
    });
  });

  // Header scroll behavior
  let lastScrollY = window.scrollY;
  const header = document.querySelector('header');
  
  window.addEventListener('scroll', function() {
    const currentScrollY = window.scrollY;
    
    if (header) {
      if (currentScrollY > lastScrollY && currentScrollY > 100) {
        // Scrolling down
        header.style.transform = 'translateY(-100%)';
      } else {
        // Scrolling up
        header.style.transform = 'translateY(0)';
      }
    }
    
    lastScrollY = currentScrollY;
  });

  console.log('Header v1.3 JavaScript loaded successfully');
});
</script>