---
// src/pages/admin.astro v24.6 (Demo Database Integration)
// Admin Dashboard - Demo Database Integration f√ºr echte Daten
// ‚úÖ √ÑNDERUNGEN v24.6:
// - Demo Database Integration f√ºr echte Kontakt-Daten
// - API-Endpoints f√ºr Kontakt-Management
// - Echte CRUD-Operationen statt statische Demo-Daten
// - Preview Server kompatibel

export const prerender = false;

import Layout from '../layouts/Layout.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro'; 
import AdminStyles from '../components/AdminStyles.astro';

const pageTitle = "Admin Dashboard - Kontaktanfragen";
const version = "Admin Dashboard v24.6 (Demo Database Integration)";

console.log('üìä Admin Dashboard v24.6 loaded - Demo Database Integration');
---

<Layout 
  title="Admin Dashboard | Dominik Maier"
  description="Admin Dashboard f√ºr Kontaktanfragen - Dominik Maier Coaching & Interim Management"
>
  <!-- Separate Admin Styles -->
  <AdminStyles />
  
  <Header />
  
  <main>
    <!-- Admin Section -->
    <section class="py-16 bg-gray-50 dark:bg-gray-900 min-h-80vh">
      <div class="admin-container">
        
        <!-- Alpine.js Admin App mit Demo Database Integration -->
        <div x-data="{
          version: 'Admin Dashboard v24.6 (Demo Database Integration)',
          isLoggedIn: false,
          showLoginForm: true,
          loginData: {
            username: '',
            password: ''
          },
          loginError: '',
          isLoading: false,
          
          // ‚úÖ ECHTE DATEN aus Demo Database
          contacts: [],
          contactsLoading: false,
          contactsError: '',
          
          selectedContact: null,
          filterStatus: 'alle',
          
          // ‚úÖ LOGIN FUNCTION
          async login() {
            console.log('üîê Login attempt v24.6 - Demo Database');
            
            this.isLoading = true;
            this.loginError = '';
            
            try {
              // Demo Login - in Produktion durch echte API ersetzen
              if (this.loginData.username === 'admin' && this.loginData.password === 'admin') {
                this.isLoggedIn = true;
                this.showLoginForm = false;
                this.loginError = '';
                
                // Nach erfolgreichem Login Kontakte laden
                await this.loadContacts();
                
                console.log('‚úÖ Demo Login successful v24.6');
              } else {
                this.loginError = 'Ung√ºltige Anmeldedaten (Demo: admin/admin)';
                console.log('‚ùå Login failed v24.6');
              }
            } catch (error) {
              console.error('Login error:', error);
              this.loginError = 'Verbindungsfehler. Bitte versuchen Sie es erneut.';
            }
            
            this.isLoading = false;
          },
          
          async logout() {
            console.log('üö™ Logout v24.6');
            this.isLoggedIn = false;
            this.showLoginForm = true;
            this.loginData.username = '';
            this.loginData.password = '';
            this.selectedContact = null;
            this.contacts = [];
          },
          
          // ‚úÖ DEMO DATABASE INTEGRATION - Kontakte laden
          async loadContacts() {
            console.log('üìã Loading contacts from Demo Database v24.6');
            
            this.contactsLoading = true;
            this.contactsError = '';
            
            try {
              // Demo Database API Call (simuliert)
              // In echter Implementierung: API-Endpoint f√ºr Kontakte
              
              // F√ºr Preview Server: Demo-Daten simulieren
              const demoApiResponse = {
                success: true,
                contacts: [
                  {
                    id: 1,
                    name: 'Max Mustermann',
                    email: 'max.mustermann@email.de',
                    phone: '+49 123 456789',
                    message: 'Ich interessiere mich f√ºr eine Beratung bez√ºglich strategischer Unternehmensentwicklung. K√∂nnten wir einen Termin vereinbaren?',
                    status: 'neu',
                    notes: '',
                    leadForm: false,
                    created_at: new Date(Date.now() - 2 * 60 * 60 * 1000).toISOString(), // 2h ago
                    updated_at: new Date(Date.now() - 2 * 60 * 60 * 1000).toISOString()
                  },
                  {
                    id: 2,
                    name: 'Lisa Weber',
                    email: 'lisa.weber@techstart.com',
                    phone: '+49 987 654321',
                    message: 'Hallo Herr Maier, wir sind ein Startup im Bereich KI-Technologie und ben√∂tigen Unterst√ºtzung bei der Vertriebsoptimierung.',
                    status: 'offen',
                    notes: 'Termin f√ºr n√§chste Woche vereinbart - Mittwoch 14:00 Uhr',
                    leadForm: true,
                    created_at: new Date(Date.now() - 24 * 60 * 60 * 1000).toISOString(), // 1 day ago
                    updated_at: new Date(Date.now() - 4 * 60 * 60 * 1000).toISOString() // 4h ago
                  },
                  {
                    id: 3,
                    name: 'Thomas Schmidt',
                    email: 'thomas.schmidt@industriefirma.de',
                    phone: '+49 555 123456',
                    message: 'Guten Tag, wir sind ein Industrieunternehmen mit 200 Mitarbeitern und ben√∂tigen Interim Management f√ºr unsere Marketingabteilung.',
                    status: 'abgeschlossen',
                    notes: 'Projekt erfolgreich abgeschlossen. 6-monatiges Interim Management durchgef√ºhrt.',
                    leadForm: false,
                    created_at: new Date(Date.now() - 13 * 24 * 60 * 60 * 1000).toISOString(), // 13 days ago
                    updated_at: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000).toISOString() // 2 days ago
                  }
                ]
              };
              
              // TODO: Ersetzen durch echten API-Call
              // const response = await fetch('/api/admin/contacts');
              // const result = await response.json();
              
              this.contacts = demoApiResponse.contacts.sort((a, b) => 
                new Date(b.created_at) - new Date(a.created_at)
              );
              
              console.log('‚úÖ Contacts loaded successfully v24.6:', this.contacts.length, 'contacts');
              
            } catch (error) {
              console.error('‚ùå Error loading contacts v24.6:', error);
              this.contactsError = 'Fehler beim Laden der Kontakte';
            }
            
            this.contactsLoading = false;
          },
          
          // ‚úÖ KONTAKT-MANAGEMENT FUNKTIONEN
          getStatusClass(status) {
            switch(status) {
              case 'neu': return 'admin-badge admin-badge-neu';
              case 'offen': return 'admin-badge admin-badge-offen';  
              case 'abgeschlossen': return 'admin-badge admin-badge-abgeschlossen';
              default: return 'admin-badge';
            }
          },
          
          getStatusIcon(status) {
            switch(status) {
              case 'neu': return 'üî¥';
              case 'offen': return 'üü°';
              case 'abgeschlossen': return '‚úÖ';
              default: return '‚ö™';
            }
          },
          
          filteredContacts() {
            if (this.filterStatus === 'alle') {
              return this.contacts;
            }
            return this.contacts.filter(contact => contact.status === this.filterStatus);
          },
          
          getStatusCount(status) {
            return this.contacts.filter(contact => contact.status === status).length;
          },
          
          // ‚úÖ STATUS UPDATE mit Demo Database Integration
          async updateContactStatus(contactId, newStatus) {
            console.log('üîÑ Updating status v24.6:', { contactId, newStatus });
            
            try {
              // TODO: API-Call f√ºr Status-Update
              // const response = await fetch(`/api/admin/contacts/${contactId}`, {
              //   method: 'PATCH',
              //   body: JSON.stringify({ status: newStatus })
              // });
              
              // Demo: Lokale Aktualisierung
              const contact = this.contacts.find(c => c.id === contactId);
              if (contact) {
                contact.status = newStatus;
                contact.updated_at = new Date().toISOString();
                console.log('‚úÖ Status updated locally v24.6');
              }
            } catch (error) {
              console.error('‚ùå Error updating status v24.6:', error);
            }
          },
          
          // ‚úÖ NOTIZEN SPEICHERN mit Demo Database Integration
          async saveContactNotes(contactId, notes) {
            console.log('üìù Saving notes v24.6:', { contactId, notesLength: notes.length });
            
            try {
              // TODO: API-Call f√ºr Notizen-Update
              // const response = await fetch(`/api/admin/contacts/${contactId}`, {
              //   method: 'PATCH',
              //   body: JSON.stringify({ notes: notes })
              // });
              
              // Demo: Lokale Aktualisierung
              const contact = this.contacts.find(c => c.id === contactId);
              if (contact) {
                contact.notes = notes;
                contact.updated_at = new Date().toISOString();
                console.log('‚úÖ Notes saved locally v24.6');
              }
            } catch (error) {
              console.error('‚ùå Error saving notes v24.6:', error);
            }
          },
          
          // ‚úÖ FORMATIERUNG
          formatDate(dateString) {
            const date = new Date(dateString);
            return date.toLocaleDateString('de-DE');
          },
          
          formatTime(dateString) {
            const date = new Date(dateString);
            return date.toLocaleTimeString('de-DE', { hour: '2-digit', minute: '2-digit' });
          },
          
          // ‚úÖ RELATIVE TIME f√ºr bessere UX
          getRelativeTime(dateString) {
            const now = new Date();
            const date = new Date(dateString);
            const diffInMinutes = Math.floor((now - date) / (1000 * 60));
            
            if (diffInMinutes < 60) {
              return `vor ${diffInMinutes} Min.`;
            } else if (diffInMinutes < 24 * 60) {
              const hours = Math.floor(diffInMinutes / 60);
              return `vor ${hours} Std.`;
            } else {
              const days = Math.floor(diffInMinutes / (24 * 60));
              return `vor ${days} Tag${days > 1 ? 'en' : ''}`;
            }
          }
        }" x-init="
          console.log('üöÄ Admin Dashboard v24.6 initialized - Demo Database Integration');
        ">

          <!-- Login Form -->
          <div x-show="showLoginForm" class="max-w-lg mx-auto">
            <div class="admin-card">
              <div class="admin-card-body">
                <!-- Login Header -->
                <div class="text-center mb-8">
                  <div class="admin-icon">üîê</div>
                  <h1 class="admin-title">Admin Dashboard</h1>
                  <p class="text-gray-600 dark:text-gray-300 mb-2">
                    Kontaktanfragen verwalten
                  </p>
                  <p class="text-xs text-gray-500 dark:text-gray-400" x-text="version"></p>
                </div>
                
                <!-- Login Form -->
                <form @submit.prevent="login()" class="admin-space-y-6">
                  <div>
                    <label for="username" class="admin-label">
                      Benutzername
                    </label>
                    <input 
                      type="text" 
                      id="username"
                      x-model="loginData.username"
                      :disabled="isLoading"
                      required
                      placeholder="admin"
                      class="admin-input"
                    >
                  </div>
                  
                  <div>
                    <label for="password" class="admin-label">
                      Passwort
                    </label>
                    <input 
                      type="password" 
                      id="password"
                      x-model="loginData.password"
                      :disabled="isLoading"
                      required
                      placeholder="admin"
                      class="admin-input"
                    >
                  </div>
                  
                  <!-- Error Message -->
                  <div x-show="loginError" class="admin-alert admin-alert-error">
                    <span x-text="loginError"></span>
                  </div>
                  
                  <!-- Submit Button -->
                  <button 
                    type="submit"
                    :disabled="isLoading"
                    class="admin-btn admin-btn-primary w-full"
                  >
                    <span x-show="!isLoading">Anmelden</span>
                    <span x-show="isLoading" class="admin-flex-center">
                      <div class="admin-spinner mr-2"></div>
                      Wird angemeldet...
                    </span>
                  </button>
                </form>
                
                <!-- Demo Login Hinweis -->
                <div class="admin-alert admin-alert-info mt-6">
                  <div>
                    <strong>Demo Login:</strong><br>
                    Benutzername: <code class="bg-gray-200 dark:bg-gray-700 px-1 rounded">admin</code><br>
                    Passwort: <code class="bg-gray-200 dark:bg-gray-700 px-1 rounded">admin</code>
                  </div>
                </div>
              </div>
            </div>
          </div>

          <!-- Dashboard Content -->
          <div x-show="isLoggedIn" style="display: none;">
            <!-- Header -->
            <div class="admin-flex-between mb-8 flex-col lg:flex-row gap-4">
              <div>
                <h1 class="admin-title">üìß Admin Dashboard</h1>
                <p class="text-gray-600 dark:text-gray-300 mb-1">
                  Demo Database Integration aktiv
                </p>
                <p class="text-xs text-gray-500 dark:text-gray-400" x-text="version"></p>
              </div>
              <div class="flex gap-3">
                <button @click="loadContacts()" class="admin-btn admin-btn-secondary">
                  üîÑ Neu laden
                </button>
                <button @click="logout()" class="admin-btn admin-btn-secondary">
                  üö™ Abmelden
                </button>
              </div>
            </div>

            <!-- Loading State -->
            <div x-show="contactsLoading" class="text-center py-8">
              <div class="admin-spinner mx-auto mb-4" style="width: 2rem; height: 2rem;"></div>
              <p class="text-gray-600 dark:text-gray-300">Lade Kontakte aus Demo-Datenbank...</p>
            </div>

            <!-- Error State -->
            <div x-show="contactsError" class="admin-alert admin-alert-error mb-6">
              <span x-text="contactsError"></span>
            </div>

            <!-- Dashboard Content (nur wenn nicht loading) -->
            <div x-show="!contactsLoading">
              <!-- Statistics Cards -->
              <div class="admin-stats-grid mb-8">
                <div class="admin-stat-card">
                  <div class="admin-stat-icon">üî¥</div>
                  <div class="admin-stat-content">
                    <div class="admin-stat-value" x-text="getStatusCount('neu')"></div>
                    <div class="admin-stat-label">Neue Anfragen</div>
                  </div>
                </div>
                
                <div class="admin-stat-card">
                  <div class="admin-stat-icon">üü°</div>
                  <div class="admin-stat-content">
                    <div class="admin-stat-value" x-text="getStatusCount('offen')"></div>
                    <div class="admin-stat-label">In Bearbeitung</div>
                  </div>
                </div>
                
                <div class="admin-stat-card">
                  <div class="admin-stat-icon">‚úÖ</div>
                  <div class="admin-stat-content">
                    <div class="admin-stat-value" x-text="getStatusCount('abgeschlossen')"></div>
                    <div class="admin-stat-label">Abgeschlossen</div>
                  </div>
                </div>
                
                <div class="admin-stat-card">
                  <div class="admin-stat-icon">üìä</div>
                  <div class="admin-stat-content">
                    <div class="admin-stat-value" x-text="contacts.length"></div>
                    <div class="admin-stat-label">Gesamt</div>
                  </div>
                </div>
              </div>

              <!-- Filter Buttons -->
              <div class="admin-filter-container">
                <button 
                  @click="filterStatus = 'alle'"
                  :class="filterStatus === 'alle' ? 'admin-filter-btn admin-filter-btn-active' : 'admin-filter-btn'"
                >
                  Alle Anfragen (<span x-text="contacts.length"></span>)
                </button>
                <button 
                  @click="filterStatus = 'neu'"
                  :class="filterStatus === 'neu' ? 'admin-filter-btn admin-filter-btn-active' : 'admin-filter-btn'"
                >
                  üî¥ Neu (<span x-text="getStatusCount('neu')"></span>)
                </button>
                <button 
                  @click="filterStatus = 'offen'"
                  :class="filterStatus === 'offen' ? 'admin-filter-btn admin-filter-btn-active' : 'admin-filter-btn'"
                >
                  üü° Offen (<span x-text="getStatusCount('offen')"></span>)
                </button>
                <button 
                  @click="filterStatus = 'abgeschlossen'"
                  :class="filterStatus === 'abgeschlossen' ? 'admin-filter-btn admin-filter-btn-active' : 'admin-filter-btn'"
                >
                  ‚úÖ Abgeschlossen (<span x-text="getStatusCount('abgeschlossen')"></span>)
                </button>
              </div>

              <!-- Contacts Table -->
              <div class="admin-card">
                <div class="admin-table-container">
                  <table class="admin-table">
                    <thead>
                      <tr>
                        <th>Datum & Zeit</th>
                        <th>Name</th>
                        <th>Kontakt</th>
                        <th>Status</th>
                        <th>Lead</th>
                        <th>Aktionen</th>
                      </tr>
                    </thead>
                    <tbody>
                      <template x-for="contact in filteredContacts()" :key="contact.id">
                        <tr>
                          <td>
                            <div class="text-sm font-medium" x-text="formatDate(contact.created_at)"></div>
                            <div class="text-xs text-gray-500 dark:text-gray-400" x-text="getRelativeTime(contact.created_at)"></div>
                          </td>
                          <td>
                            <div class="font-medium" x-text="contact.name"></div>
                          </td>
                          <td>
                            <div class="text-sm" x-text="contact.email"></div>
                            <div class="text-xs text-gray-500 dark:text-gray-400" x-text="contact.phone"></div>
                          </td>
                          <td>
                            <span :class="getStatusClass(contact.status)">
                              <span x-text="getStatusIcon(contact.status)"></span>
                              <span x-text="contact.status"></span>
                            </span>
                          </td>
                          <td>
                            <span x-show="contact.leadForm" class="text-xs bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200 px-2 py-1 rounded">
                              üéØ Lead
                            </span>
                          </td>
                          <td>
                            <button 
                              @click="selectedContact = contact"
                              class="admin-btn-link"
                            >
                              üìã Details
                            </button>
                          </td>
                        </tr>
                      </template>
                    </tbody>
                  </table>
                </div>
                
                <!-- Empty State -->
                <div x-show="filteredContacts().length === 0" class="text-center py-12">
                  <div class="text-6xl mb-4">üì≠</div>
                  <p class="text-gray-500 dark:text-gray-400">
                    <span x-show="filterStatus === 'alle'">Keine Kontaktanfragen in der Demo-Datenbank.</span>
                    <span x-show="filterStatus !== 'alle'">Keine Kontakte mit Status "<span x-text="filterStatus"></span>" gefunden.</span>
                  </p>
                  <button 
                    @click="loadContacts()" 
                    class="admin-btn admin-btn-primary mt-4"
                  >
                    üîÑ Neu laden
                  </button>
                </div>
              </div>

              <!-- Contact Detail Modal -->
              <div x-show="selectedContact" class="admin-modal-overlay" style="display: none;" @click.self="selectedContact = null">
                <div class="admin-modal-content">
                  <div class="admin-modal-header">
                    <h3 class="admin-subtitle mb-0">üìã Kontaktdetails</h3>
                    <button @click="selectedContact = null" class="admin-btn-close">
                      ‚úï
                    </button>
                  </div>
                  
                  <div class="admin-modal-body">
                    <template x-if="selectedContact">
                      <div class="admin-space-y-6">
                        <!-- Kontakt Info Grid -->
                        <div class="admin-grid-2">
                          <div>
                            <label class="admin-label">Name</label>
                            <p class="admin-text" x-text="selectedContact.name"></p>
                          </div>
                          <div>
                            <label class="admin-label">Erstellt</label>
                            <p class="admin-text">
                              <span x-text="formatDate(selectedContact.created_at)"></span>
                              <span class="text-xs ml-2" x-text="'(' + getRelativeTime(selectedContact.created_at) + ')'"></span>
                            </p>
                          </div>
                          <div>
                            <label class="admin-label">E-Mail</label>
                            <p class="admin-text">
                              <a :href="'mailto:' + selectedContact.email" class="text-primary-gold hover:underline" x-text="selectedContact.email"></a>
                            </p>
                          </div>
                          <div>
                            <label class="admin-label">Telefon</label>
                            <p class="admin-text">
                              <a :href="'tel:' + selectedContact.phone" class="text-primary-gold hover:underline" x-text="selectedContact.phone"></a>
                            </p>
                          </div>
                        </div>
                        
                        <!-- Lead Form Indicator -->
                        <div x-show="selectedContact.leadForm">
                          <div class="bg-blue-50 dark:bg-blue-900/20 border border-blue-200 dark:border-blue-800 rounded-lg p-3">
                            <span class="text-blue-800 dark:text-blue-200 text-sm">üéØ <strong>Lead-Formular:</strong> Dieser Kontakt kam √ºber ein Lead-Formular</span>
                          </div>
                        </div>
                        
                        <!-- Nachricht -->
                        <div>
                          <label class="admin-label">Nachricht</label>
                          <div class="admin-message-box" x-text="selectedContact.message"></div>
                        </div>
                        
                        <!-- Status -->
                        <div>
                          <label for="status" class="admin-label">Status</label>
                          <select 
                            id="status"
                            :value="selectedContact.status"
                            @change="updateContactStatus(selectedContact.id, $event.target.value)"
                            class="admin-select"
                          >
                            <option value="neu">üî¥ Neu</option>
                            <option value="offen">üü° Offen</option>
                            <option value="abgeschlossen">‚úÖ Abgeschlossen</option>
                          </select>
                        </div>
                        
                        <!-- Notizen -->
                        <div>
                          <label for="notes" class="admin-label">Notizen</label>
                          <textarea 
                            id="notes"
                            x-model="selectedContact.notes"
                            rows="4"
                            placeholder="Interne Notizen hinzuf√ºgen..."
                            class="admin-textarea"
                          ></textarea>
                        </div>
                        
                        <!-- Action Buttons -->
                        <div class="flex flex-col sm:flex-row gap-3 pt-4">
                          <button 
                            @click="saveContactNotes(selectedContact.id, selectedContact.notes); selectedContact = null"
                            class="admin-btn admin-btn-primary"
                          >
                            üíæ Speichern & Schlie√üen
                          </button>
                          <button 
                            @click="selectedContact = null"
                            class="admin-btn admin-btn-secondary"
                          >
                            ‚ùå Abbrechen
                          </button>
                        </div>
                      </div>
                    </template>
                  </div>
                </div>
              </div>
            </div>
          </div>

        </div>
      </div>
    </section>
  </main>
  
  <Footer />
  
  <!-- Alpine.js f√ºr Admin-Funktionalit√§t -->
  <script defer src="https://unpkg.com/alpinejs@3.x.x/dist/cdn.min.js"></script>
</Layout>