---
// src/pages/admin.astro v24.5 (Separate AdminStyles Integration)
// Admin Dashboard - Layout v1.2.8 + Separate AdminStyles
// ‚úÖ √ÑNDERUNGEN v24.5:
// - Layout v1.2.8 UNVER√ÑNDERT verwendet
// - Separate AdminStyles.astro importiert
// - Design passt sich Homepage an (nicht umgekehrt)
// - Header v1.5.1 + Footer v1.3 integriert
// - Alle Admin-CSS-Klassen aus separater Datei

export const prerender = false;

import Layout from '../layouts/Layout.astro';  // Original v1.2.8
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import AdminStyles from '../components/AdminStyles.astro';  // Separate CSS

const pageTitle = "Admin Dashboard - Kontaktanfragen";
const version = "Admin Dashboard v24.5 (Separate AdminStyles)";

console.log('üìä Admin Dashboard v24.5 loaded - Separate AdminStyles Integration');
---

<Layout 
  title="Admin Dashboard | Dominik Maier"
  description="Admin Dashboard f√ºr Kontaktanfragen - Dominik Maier Coaching & Interim Management"
>
  <!-- Separate Admin Styles -->
  <AdminStyles />
  
  <Header />
  
  <main>
    <!-- Admin Section mit Layout v1.2.8 Klassen -->
    <section class="py-16 bg-gray-50 dark:bg-gray-900 min-h-80vh">
      <div class="admin-container">
        
        <!-- Alpine.js Admin App -->
        <div x-data="{
          version: 'Admin Dashboard v24.5 (Separate AdminStyles)',
          isLoggedIn: false,
          showLoginForm: true,
          loginData: {
            username: '',
            password: ''
          },
          loginError: '',
          isLoading: false,
          
          // ‚úÖ Demo-Kontakte f√ºr Funktionalit√§t
          contacts: [
            {
              id: 1,
              name: 'Max Mustermann',
              email: 'max.mustermann@email.de',
              phone: '+49 123 456789',
              message: 'Ich interessiere mich f√ºr eine Beratung bez√ºglich Verm√∂gensaufbau. K√∂nnten wir einen Termin vereinbaren?',
              status: 'neu',
              notes: '',
              created_at: '2025-07-19T12:30:00Z',
              updated_at: '2025-07-19T12:30:00Z'
            },
            {
              id: 2,
              name: 'Lisa Weber',
              email: 'lisa.weber@example.com',
              phone: '+49 987 654321',
              message: 'Hallo, ich h√§tte gerne Informationen zu Ihren Versicherungsprodukten f√ºr junge Familien.',
              status: 'offen',
              notes: 'Termin f√ºr n√§chste Woche vereinbart',
              created_at: '2025-07-19T09:15:00Z',
              updated_at: '2025-07-19T09:15:00Z'
            },
            {
              id: 3,
              name: 'Thomas Schmidt',
              email: 'thomas.schmidt@firma.de',
              phone: '+49 555 123456',
              message: 'Firmenversicherung f√ºr 15 Mitarbeiter gesucht. Bitte um R√ºckruf.',
              status: 'abgeschlossen',
              notes: 'Angebot versendet, Vertrag unterschrieben',
              created_at: '2025-07-18T14:45:00Z',
              updated_at: '2025-07-18T14:45:00Z'
            }
          ],
          
          selectedContact: null,
          filterStatus: 'alle',
          
          async login() {
            console.log('üîê Login attempt v24.5 - ENV credentials');
            
            this.isLoading = true;
            this.loginError = '';
            
            try {
              // ‚úÖ Server-seitige Login-Pr√ºfung mit ENV-Variablen
              const response = await fetch('/api/admin/login', {
                method: 'POST',
                headers: {
                  'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                  username: this.loginData.username,
                  password: this.loginData.password
                })
              });
              
              const result = await response.json();
              
              if (response.ok && result.success) {
                this.isLoggedIn = true;
                this.showLoginForm = false;
                this.loginError = '';
                console.log('‚úÖ Login successful v24.5');
              } else {
                this.loginError = result.message || 'Ung√ºltige Anmeldedaten';
                console.log('‚ùå Login failed v24.5');
              }
            } catch (error) {
              console.error('Login error:', error);
              this.loginError = 'Verbindungsfehler. Bitte versuchen Sie es erneut.';
            }
            
            this.isLoading = false;
          },
          
          async logout() {
            console.log('üö™ Logout v24.5');
            this.isLoggedIn = false;
            this.showLoginForm = true;
            this.loginData.username = '';
            this.loginData.password = '';
            this.selectedContact = null;
          },
          
          // ‚úÖ Kontakt-Management Funktionen
          getStatusClass(status) {
            switch(status) {
              case 'neu': return 'admin-badge admin-badge-neu';
              case 'offen': return 'admin-badge admin-badge-offen';  
              case 'abgeschlossen': return 'admin-badge admin-badge-abgeschlossen';
              default: return 'admin-badge';
            }
          },
          
          getStatusIcon(status) {
            switch(status) {
              case 'neu': return 'üî¥';
              case 'offen': return 'üü°';
              case 'abgeschlossen': return '‚úÖ';
              default: return '‚ö™';
            }
          },
          
          filteredContacts() {
            if (this.filterStatus === 'alle') {
              return this.contacts;
            }
            return this.contacts.filter(contact => contact.status === this.filterStatus);
          },
          
          getStatusCount(status) {
            return this.contacts.filter(contact => contact.status === status).length;
          },
          
          async updateContactStatus(contactId, newStatus) {
            console.log('üîÑ Updating status v24.5:', { contactId, newStatus });
            
            const contact = this.contacts.find(c => c.id === contactId);
            if (contact) {
              contact.status = newStatus;
              contact.updated_at = new Date().toISOString();
              console.log('‚úÖ Status updated');
            }
          },
          
          async saveContactNotes(contactId, notes) {
            console.log('üìù Saving notes v24.5:', { contactId, notesLength: notes.length });
            
            const contact = this.contacts.find(c => c.id === contactId);
            if (contact) {
              contact.notes = notes;
              contact.updated_at = new Date().toISOString();
              console.log('‚úÖ Notes saved');
            }
          },
          
          formatDate(dateString) {
            const date = new Date(dateString);
            return date.toLocaleDateString('de-DE');
          },
          
          formatTime(dateString) {
            const date = new Date(dateString);
            return date.toLocaleTimeString('de-DE', { hour: '2-digit', minute: '2-digit' });
          }
        }" x-init="
          console.log('üöÄ Admin Dashboard v24.5 initialized - Separate AdminStyles');
        ">

          <!-- Login Form -->
          <div x-show="showLoginForm" class="max-w-lg mx-auto">
            <div class="admin-card">
              <div class="admin-card-body">
                <!-- Login Header -->
                <div class="text-center mb-8">
                  <div class="admin-icon">üîê</div>
                  <h1 class="admin-title">Admin Dashboard</h1>
                  <p class="text-gray-600 dark:text-gray-300 mb-2">
                    Bitte melden Sie sich an
                  </p>
                  <p class="text-xs text-gray-500 dark:text-gray-400" x-text="version"></p>
                </div>
                
                <!-- Login Form -->
                <form @submit.prevent="login()" class="admin-space-y-6">
                  <div>
                    <label for="username" class="admin-label">
                      Benutzername
                    </label>
                    <input 
                      type="text" 
                      id="username"
                      x-model="loginData.username"
                      :disabled="isLoading"
                      required
                      placeholder="Benutzername eingeben"
                      class="admin-input"
                    >
                  </div>
                  
                  <div>
                    <label for="password" class="admin-label">
                      Passwort
                    </label>
                    <input 
                      type="password" 
                      id="password"
                      x-model="loginData.password"
                      :disabled="isLoading"
                      required
                      placeholder="Passwort eingeben"
                      class="admin-input"
                    >
                  </div>
                  
                  <!-- Error Message -->
                  <div x-show="loginError" class="admin-alert admin-alert-error">
                    <span x-text="loginError"></span>
                  </div>
                  
                  <!-- Submit Button -->
                  <button 
                    type="submit"
                    :disabled="isLoading"
                    class="admin-btn admin-btn-primary w-full"
                  >
                    <span x-show="!isLoading">Anmelden</span>
                    <span x-show="isLoading" class="admin-flex-center">
                      <div class="admin-spinner mr-2"></div>
                      Wird angemeldet...
                    </span>
                  </button>
                </form>
                
                <!-- Login Hinweis -->
                <div class="admin-alert admin-alert-info mt-6">
                  <div>
                    <strong>Hinweis:</strong><br>
                    Verwenden Sie Ihre Admin-Anmeldedaten f√ºr den Zugang.
                  </div>
                </div>
              </div>
            </div>
          </div>

          <!-- Dashboard Content -->
          <div x-show="isLoggedIn" style="display: none;">
            <!-- Header -->
            <div class="admin-flex-between mb-8 flex-col lg:flex-row gap-4">
              <div>
                <h1 class="admin-title">üìß Admin Dashboard</h1>
                <p class="text-gray-600 dark:text-gray-300 mb-1">
                  Erfolgreich eingeloggt!
                </p>
                <p class="text-xs text-gray-500 dark:text-gray-400" x-text="version"></p>
              </div>
              <button @click="logout()" class="admin-btn admin-btn-secondary">
                üö™ Abmelden
              </button>
            </div>

            <!-- Statistics Cards -->
            <div class="admin-stats-grid">
              <div class="admin-stat-card">
                <div class="admin-stat-icon">üî¥</div>
                <div class="admin-stat-content">
                  <div class="admin-stat-value" x-text="getStatusCount('neu')"></div>
                  <div class="admin-stat-label">Neue Anfragen</div>
                </div>
              </div>
              
              <div class="admin-stat-card">
                <div class="admin-stat-icon">üü°</div>
                <div class="admin-stat-content">
                  <div class="admin-stat-value" x-text="getStatusCount('offen')"></div>
                  <div class="admin-stat-label">In Bearbeitung</div>
                </div>
              </div>
              
              <div class="admin-stat-card">
                <div class="admin-stat-icon">‚úÖ</div>
                <div class="admin-stat-content">
                  <div class="admin-stat-value" x-text="getStatusCount('abgeschlossen')"></div>
                  <div class="admin-stat-label">Abgeschlossen</div>
                </div>
              </div>
              
              <div class="admin-stat-card">
                <div class="admin-stat-icon">üìä</div>
                <div class="admin-stat-content">
                  <div class="admin-stat-value" x-text="contacts.length"></div>
                  <div class="admin-stat-label">Gesamt</div>
                </div>
              </div>
            </div>

            <!-- Filter Buttons -->
            <div class="admin-filter-container">
              <button 
                @click="filterStatus = 'alle'"
                :class="filterStatus === 'alle' ? 'admin-filter-btn admin-filter-btn-active' : 'admin-filter-btn'"
              >
                Alle Anfragen
              </button>
              <button 
                @click="filterStatus = 'neu'"
                :class="filterStatus === 'neu' ? 'admin-filter-btn admin-filter-btn-active' : 'admin-filter-btn'"
              >
                üî¥ Neu
              </button>
              <button 
                @click="filterStatus = 'offen'"
                :class="filterStatus === 'offen' ? 'admin-filter-btn admin-filter-btn-active' : 'admin-filter-btn'"
              >
                üü° Offen
              </button>
              <button 
                @click="filterStatus = 'abgeschlossen'"
                :class="filterStatus === 'abgeschlossen' ? 'admin-filter-btn admin-filter-btn-active' : 'admin-filter-btn'"
              >
                ‚úÖ Abgeschlossen
              </button>
            </div>

            <!-- Contacts Table -->
            <div class="admin-card">
              <div class="admin-table-container">
                <table class="admin-table">
                  <thead>
                    <tr>
                      <th>Datum & Zeit</th>
                      <th>Name</th>
                      <th>Kontakt</th>
                      <th>Status</th>
                      <th>Aktionen</th>
                    </tr>
                  </thead>
                  <tbody>
                    <template x-for="contact in filteredContacts()" :key="contact.id">
                      <tr>
                        <td>
                          <div class="text-sm font-medium" x-text="formatDate(contact.created_at)"></div>
                          <div class="text-xs text-gray-500 dark:text-gray-400" x-text="formatTime(contact.created_at)"></div>
                        </td>
                        <td>
                          <div class="font-medium" x-text="contact.name"></div>
                        </td>
                        <td>
                          <div class="text-sm" x-text="contact.email"></div>
                          <div class="text-xs text-gray-500 dark:text-gray-400" x-text="contact.phone"></div>
                        </td>
                        <td>
                          <span :class="getStatusClass(contact.status)">
                            <span x-text="getStatusIcon(contact.status)"></span>
                            <span x-text="contact.status"></span>
                          </span>
                        </td>
                        <td>
                          <button 
                            @click="selectedContact = contact"
                            class="admin-btn-link"
                          >
                            üìã Details
                          </button>
                        </td>
                      </tr>
                    </template>
                  </tbody>
                </table>
              </div>
              
              <!-- Empty State -->
              <div x-show="filteredContacts().length === 0" class="text-center py-12">
                <div class="text-6xl mb-4">üì≠</div>
                <p class="text-gray-500 dark:text-gray-400">Keine Kontaktanfragen gefunden.</p>
              </div>
            </div>

            <!-- Contact Detail Modal -->
            <div x-show="selectedContact" class="admin-modal-overlay" style="display: none;" @click.self="selectedContact = null">
              <div class="admin-modal-content">
                <div class="admin-modal-header">
                  <h3 class="admin-subtitle mb-0">üìã Kontaktdetails</h3>
                  <button @click="selectedContact = null" class="admin-btn-close">
                    ‚úï
                  </button>
                </div>
                
                <div class="admin-modal-body">
                  <template x-if="selectedContact">
                    <div class="admin-space-y-6">
                      <!-- Kontakt Info Grid -->
                      <div class="admin-grid-2">
                        <div>
                          <label class="admin-label">Name</label>
                          <p class="admin-text" x-text="selectedContact.name"></p>
                        </div>
                        <div>
                          <label class="admin-label">Datum</label>
                          <p class="admin-text" x-text="formatDate(selectedContact.created_at) + ' ' + formatTime(selectedContact.created_at)"></p>
                        </div>
                        <div>
                          <label class="admin-label">E-Mail</label>
                          <p class="admin-text" x-text="selectedContact.email"></p>
                        </div>
                        <div>
                          <label class="admin-label">Telefon</label>
                          <p class="admin-text" x-text="selectedContact.phone"></p>
                        </div>
                      </div>
                      
                      <!-- Nachricht -->
                      <div>
                        <label class="admin-label">Nachricht</label>
                        <div class="admin-message-box" x-text="selectedContact.message"></div>
                      </div>
                      
                      <!-- Status -->
                      <div>
                        <label for="status" class="admin-label">Status</label>
                        <select 
                          id="status"
                          :value="selectedContact.status"
                          @change="updateContactStatus(selectedContact.id, $event.target.value)"
                          class="admin-select"
                        >
                          <option value="neu">üî¥ Neu</option>
                          <option value="offen">üü° Offen</option>
                          <option value="abgeschlossen">‚úÖ Abgeschlossen</option>
                        </select>
                      </div>
                      
                      <!-- Notizen -->
                      <div>
                        <label for="notes" class="admin-label">Notizen</label>
                        <textarea 
                          id="notes"
                          x-model="selectedContact.notes"
                          rows="3"
                          placeholder="Notizen hinzuf√ºgen..."
                          class="admin-textarea"
                        ></textarea>
                      </div>
                      
                      <!-- Action Buttons -->
                      <div class="flex flex-col sm:flex-row gap-3 pt-4">
                        <button 
                          @click="saveContactNotes(selectedContact.id, selectedContact.notes); selectedContact = null"
                          class="admin-btn admin-btn-primary"
                        >
                          üíæ Speichern
                        </button>
                        <button 
                          @click="selectedContact = null"
                          class="admin-btn admin-btn-secondary"
                        >
                          ‚ùå Abbrechen
                        </button>
                      </div>
                    </div>
                  </template>
                </div>
              </div>
            </div>
          </div>

        </div>
      </div>
    </section>
  </main>
  
  <Footer />
  
  <!-- Alpine.js f√ºr Admin-Funktionalit√§t -->
  <script defer src="https://unpkg.com/alpinejs@3.x.x/dist/cdn.min.js"></script>
</Layout>